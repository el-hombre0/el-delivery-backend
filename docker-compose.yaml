version: '3.8'
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW-SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    ports:
      - 8080:${SERVER_PORT}
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  client:
    build:
      context: ../el-delivery-frontend/
      dockerfile: Dockerfile
    ports:
      - 3000:${CLIENT_PORT}
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: ${DATABASE_HOST}
    image: postgres:16
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    command: postgres -p ${DATABASE_PORT}
    ports:
      - 5432:${DATABASE_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
